name: Flask CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-html unittest-xml-reporting
          pip install -r requirements.txt

      - name: Run unit tests and generate report
        run: |
          python -m xmlrunner discover -s . -p "test_app.py" -o test-reports

      - name: Upload Test Report (XML)
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-reports
          
  docker-build:
    runs-on: ubuntu-latest
    needs: test  # Ensures tests pass before building

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t flask-app .

      - name: Run container and test it
        run: |
          docker run -d -p 8080:8080 --name flask-container flask-app
          sleep 5  # Wait for Flask to start
          curl --fail http://localhost:8080/
          curl --fail http://localhost:8080/how%20are%20you

      - name: Stop and remove container
        run: docker stop flask-container && docker rm flask-container

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: flask-app

      - name: Set up SSH connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy Docker image to EC2
        run: |
          scp -i ~/.ssh/id_rsa flask-app.tar.gz ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/

      - name: Deploy on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            docker stop flask-container || true
            docker rm flask-container || true
            docker load < /home/ubuntu/flask-app.tar.gz
            docker run -d -p 8080:8080 --name flask-container flask-app